name: tests
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  
jobs:
  pytest:
    name: pytest
    runs-on: ${{ matrix.os }}
    env:
      MPLBACKEND: Agg
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']
    steps:
    - name: Clone repo
      uses: actions/checkout@v2
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pip dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        pip install -r requirements/requirements.txt -r requirements/tests.txt
        pip install numpy scipy
    - name: Run pytest checks (Ubuntu)
      shell: bash
      run: |
        python -m pytest -v tests --cov=lightning_uq_box --cov-report=xml
      if: ${{ runner.os == 'Ubuntu' }}
    - name: Run pytest checks (MacOS)
      shell: bash
      # env:
      #   MKL_THREADING_LAYER: TBB
      #   OMP_NUM_THREADS: 1
      #   KMP_DUPLICATE_LIB_OK: true
      run: |
        unset MKL_THREADING_LAYER
        unset OMP_NUM_THREADS
        python -m pytest -v tests --cov=lightning_uq_box --cov-report=xml
      if: ${{ runner.os == 'macos' }}
    - name: Report coverage
      uses: codecov/codecov-action@v3.1.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}