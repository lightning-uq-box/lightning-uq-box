[build-system]
requires = [
    # setuptools 61+ required for pyproject.toml support
    "setuptools>=61",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["lightning_uq_box*"]

# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "lightning_uq_box"
description = "Lighning-UQ-Box: A toolbox for uncertainty quantification in deep learning"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Nils Lehmann", email = "n.lehmann@tum.de"},
]
maintainers = [
    {name = "Nils Lehmann", email = "n.lehmann@tum.de"},
]
keywords = ["pytorch", "lightning", "uncertainty quantification", "conformal prediction", "bayesian deep learning"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    # einops 0.3+ required for einops.repeat
    "einops>=0.3",
    # lightning 2+ required for LightningCLI args + sys.argv support
    "lightning>=2",
    # matplotlib 3.3.3+ required for Python 3.9 wheels
    "matplotlib>=3.3.3",
    # numpy 1.19.3+ required by Python 3.9 wheels
    "numpy>=1.19.3",
    # pandas 1.1.3+ required for Python 3.9 wheels
    "pandas>=1.1.3",
    # torch 1.12+ required by torchvision
    "torch>=2.0",
    # timm 0.4.12 required by segmentation-models-pytorch
    "timm>=0.4.12",
    # torchmetrics 0.10+ required for binary/multiclass/multilabel classification metrics
    "torchmetrics>=1.2",
    # torchvision 0.13+ required for torchvision.models._api.WeightsEnum
    "torchvision>=0.16",
    # scikit-learn
    "scikit-learn>=1.3",
    # for deep kernel learning and other GP models
    "gpytorch>=1.11",
    # Laplace Approximation
    "laplace-torch>=0.1a2",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    ### Tests ###
    # pytest 7.3+ required for tmp_path_retention_policy
    "pytest>=7.3",
    # pytest-cov 4+ required for pytest 7.2+ compatibility
    "pytest-cov>=4",
    # pytest lazy fixture
    "pytest-lazy-fixture>=0.6",
    # hydra for tests
    "hydra-core>=1.3.2",

    ### Docs ###
    # sphinx
    "sphinx>=4,<7",
    # ipywidgets 7+ required by nbsphinx
    "ipywidgets>=7",
    # notebooks with sphinx
    "nbsphinx>=0.8.5",
    # reat the docs theme
    "sphinx-book-theme>=1.0.1",
    # Extension for markdown
    "myst-parser>=2.0",
]


[tool.pytest.ini_options]
# Skip slow tests by default
addopts = "-m 'not slow'"
# https://docs.pytest.org/en/latest/how-to/capture-warnings.html
filterwarnings = [
    # Treat all warnings as errors
    "error",

    # Warnings raised by dependencies of dependencies, out of our control

    # Expected warnings
    # Lightning warns us about using num_workers=0, but it's faster on macOS
    "ignore:The dataloader, .*, does not have many workers which may be a bottleneck:UserWarning",
    # Lightning warns us about using the CPU when a GPU is available
    "ignore:GPU available but not used.:UserWarning",

    # https://github.com/Lightning-AI/lightning/issues/16756
    "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
    "ignore:pkg_resources is deprecated as an API.:DeprecationWarning:lightning_utilities.core.imports",
    "ignore:distutils Version classes are deprecated. Use packaging.version instead.",

    # testing is run with num_workers=0
    "ignore:The .*dataloader.* does not have many workers which may be a bottleneck:UserWarning:lightning",
    "ignore:The .*dataloader.* does not have many workers which may be a bottleneck:lightning.fabric.utilities.warnings.PossibleUserWarning:lightning",

    # Lightning warns us if TensorBoard is not installed
    "ignore:Starting from v1.9.0, `tensorboardX` has been removed as a dependency of the `lightning.pytorch` package:UserWarning",
]
[tool.setuptools.dynamic]
version = {attr = "lightning_uq_box.__version__"}